[{
	"title" : "Last activity you solved few questions. There are few more questions in this activity for you to answer",
	"activityType":"quiz",
	"quizDescription" : [{"text":"Python supports a limited form of multiple inheritance, demonstrated in the following code:<br>"},{"code":"InheritanceExercise4.py"},{"text":" <br>Which<code>__init__</code> methods are invoked and in which order is determined by the coding of the individual <code>__init__</code>methods. <br><br> When resolving a reference to an attribute of an object that's an instance of class <code>D</code>, Python first searches the object's instance variables then uses a simple left-to-right, depth first search through the class hierarchy. In this case that would mean searching the class <code>C</code>, followed the class <code>B</code> and its superclasses (ie, class <code>A</code>, and then any superclasses it may have, et cetera). <br><br> With the definitions above if we define <br><br> <code>obj = D()</code> <br><br> then what is printed by each of the following statements?  "}],
	"questions": [
		{
			"questionType" : "fillintheblank",
			"questionText": " <code>print(obj.a)</code> ",
			"points":"1",
			"answer":"2"
		},

		{
			"questionType" : "fillintheblank",
			"questionText": " <code>print(obj.b)</code> ",
			"points":"1",
			"answer":"3"
		},


		{
			"questionType" : "fillintheblank",
			"questionText": " <code>print(obj.c)</code>",
			"points":"1",
			"answer":"5"
		},


		{
			"questionType" : "fillintheblank",
			"questionText": " <code>print(obj.d)</code> ",
			"points":"1",
			"answer":"6"
		},


		{
			"questionType" : "fillintheblank",
			"questionText": " <code>obj.x()</code> ",
			"points":"1",
			"answer":"A.x"
		},

		{
			"questionType" : "fillintheblank",
			"questionText": " <code>obj.y()</code> ",
			"points":"1",
			"answer":"C.y"
		},

		{
			"questionType" : "fillintheblank",
			"questionText": " <code>obj.z()</code> ",
			"points":"1",
			"answer":"D.z"
		}





	]
}]
