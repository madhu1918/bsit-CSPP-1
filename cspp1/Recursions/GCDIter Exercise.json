[{
	"activityType":"assignment",
	"title":"Solve the following problem on Iteration",
	"questions":
	[
		{
			"questionType":"filesubmission",
			"questionText":[
				{
					"text":"The greatest common divisor of two positive integers is the largest integer that divides each of them without remainder. For example,<ul><li>gcd(2, 12) = 2</li><li>gcd(6, 12) = 6</li><li>gcd(9, 12) = 3</li><li>gcd(17, 12) = 1</li></ul><br>Write an iterative function, gcdIter(a, b), that implements this idea. One easy way to do this is to begin with a test value equal to the smaller of the two input arguments, and iteratively reduce this test value by 1 until you either reach a case where the test divides both a and b without remainder, or you reach 1.<br><br>Check your program against the give test cases below as a Zip file. Submit your Solution(Zip file) when all test cases are passed"
				},
				{
					"attachment":["GCD using Iteration.zip"]
				}
			],
			"points":"5",
			"code":"gcditer.py"
		}
	]
}]
